name: Build and Deploy

on:
  push:
    branches:
      - master

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  build-and-deploy-api:
    env:
      ECR_REGISTRY: 387274513997.dkr.ecr.us-east-2.amazonaws.com
      ECR_REPOSITORY: whatsapp-portal-api
      IMAGE_TAG: ${{ github.sha }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_USER: ${{ secrets.DB_USER }}
    runs-on: self-hosted
    environment: homolog
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::387274513997:role/gihub-cicd
          aws-region: us-east-1

      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: 387274513997.dkr.ecr.us-east-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}} ./backend
          docker push ${{env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ec2-3-19-137-63.us-east-2.compute.amazonaws.com
          username: ubuntu
          key: ${{secrets.KEY}}
          script: |
            docker stop whatsapp-api || true
            docker rm whatsapp-api || true
            docker pull ${{vars.ECR_REGISTRY}}/${{vars.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}
            docker run -d -e \
            IMAGE_TAG=${{env.IMAGE_TAG}} -e \
            DB_HOST=${{secrets.DB_HOST}} -e \
            DB_USER=${{ secrets.DB_USER }} -e \
            DB_PASS=${{ secrets.DB_PASS }} -e \
            DB_NAME=${{ secrets.DB_NAME }}  -e \
            BACKEND_URL=${{ vars.BACKEND_URL }} -e \
            JWT_SECRET=${{ vars.JWT_SECRET }} -e \
            JWT_REFRESH_SECRET=${{ vars.JWT_REFRESH_SECRET }} -e \
            ENV_AWS_REGION=${{ vars.ENV_AWS_REGION }} -e \
            ENV_AWS_ACCOUNT_ID= ${{ vars.ENV_AWS_ACCOUNT_ID }} -e \
            AWS_ACCESS_KEY_ID=${{ vars.AWS_ACCESS_KEY_ID }} -e \
            AWS_SECRET_ACCESS_KEY=${{ vars.AWS_SECRET_ACCESS_KEY }} -e \
            ENV_AWS_ACCESS_KEY_ID=${{ vars.ENV_AWS_ACCESS_KEY_ID }} -e \
            ENV_AWS_SECRET_ACCESS_KEY=${{ vars.ENV_AWS_SECRET_ACCESS_KEY }} -e \
            AWS_S3_BUCKET=${{ vars.AWS_S3_BUCKET }} -e \
            WPPNOF_URL=${{ vars.WPPNOF_URL }} -e \
            WPPNOF_API_TOKEN=${{ vars.WPPNOF_API_TOKEN }} -e \
            WPPNOF_SESSION_KEY=${{ vars.WPPNOF_SESSION_KEY }} -e \
            WPP_OFFICIAL_URL=${{ vars.WPP_OFFICIAL_URL }} -e \
            WPP_OFFICIAL_API_KEY=${{ vars.WPP_OFFICIAL_API_KEY }} -e \
            WPP_NOF_WEBHOOK_URL=${{ vars.WPP_NOF_WEBHOOK_URL }} -e \
            WPP_NOF_URL=${{ vars.WPP_NOF_URL }} -e \
            WPP_NOF_API_KEY=${{ vars.WPP_NOF_API_KEY }} -e \
            REDIS_URL=${{ vars.REDIS_URL }} -e \
            REDIS_SAVE_TIME=${{ vars.REDIS_SAVE_TIME }} -e \
            SQS_DISPATCH_QUEUE=${{ vars.SQS_DISPATCH_QUEUE }} -e \
            SQS_BOT_MESSAGE_URL=${{ vars.SQS_BOT_MESSAGE_URL }} -e \
            SQS_ORQUESTRATOR_URL=${{ vars.SQS_ORQUESTRATOR_URL }} -e \
            SQS_ORQUESTRATOR_RESPONSE_URL=${{ vars.SQS_ORQUESTRATOR_RESPONSE_URL }} -e \
            SQS_MESSAGE_STATUS=${{ vars.SQS_MESSAGE_STATUS }} -e \
            BELLINATI_URL=${{ vars.BELLINATI_URL }} -e \
            BELLINATI_TOKEN=${{ vars.BELLINATI_TOKEN }} -e \
            BELLINATI_ID_FORNECEDOR=${{ vars.BELLINATI_ID_FORNECEDOR }} -e \
            BELLINATI_ID=${{ vars.BELLINATI_ID }} -e \
            FRONTEND_URL=${{ vars.FRONTEND_URL }} --name \
            whatsapp-api -p 8443:3000 ${{vars.ECR_REGISTRY}}/${{vars.ECR_REPOSITORY}}:${{env.IMAGE_TAG}}
  build-and-deploy-frontend:
    env:
      ECR_REGISTRY: 387274513997.dkr.ecr.us-east-2.amazonaws.com
      ECR_REPOSITORY: whatsapp-portal-frontend
      IMAGE_TAG: ${{ github.sha }}

    runs-on: self-hosted
    environment: homolog
    needs: build-and-deploy-api
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::387274513997:role/gihub-cicd
          aws-region: us-east-1

      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: 387274513997.dkr.ecr.us-east-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push Docker image
        run: |
          docker build -f frontend/Dockerfile_Homolog -t 387274513997.dkr.ecr.us-east-2.amazonaws.com/whatsapp-portal-frontend:${{env.IMAGE_TAG}} ./frontend
          docker push 387274513997.dkr.ecr.us-east-2.amazonaws.com/whatsapp-portal-frontend:${{env.IMAGE_TAG}}

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ec2-3-19-137-63.us-east-2.compute.amazonaws.com
          username: ubuntu
          key: ${{secrets.KEY}}
          script: |
            docker stop whatsapp-portal-frontend || true
            docker rm whatsapp-portal-frontend || true
            docker pull 387274513997.dkr.ecr.us-east-2.amazonaws.com/whatsapp-portal-frontend:${{github.sha}}
            docker run -d -e REACT_APP_BACKEND_URL=http://omni.brainitsolutions.com.br:8443 -e REACT_APP_WORKER_URL=http://omni.brainitsolutions.com.br:8444 -e REACT_APP_SQS_URL=http://omni.brainitsolutions.com.br:8445 --name whatsapp-portal-frontend -p 80:80 387274513997.dkr.ecr.us-east-2.amazonaws.com/whatsapp-portal-frontend:${{github.sha}}
