networks:
  whaticket:

services:

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: backend
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=mysql
      - DB_USER=${MYSQL_USER}
      - DB_PASS=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - DB_DIALECT=mysql
    ports:
      - "${BACKEND_PORT:-8080}:3000"
    volumes:
      - ./backend/public/:/usr/src/app/public/
      - ./backend/.wwebjs_auth/:/usr/src/app/.wwebjs_auth/
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - whaticket

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3000:80"
      - "3001:443"
    volumes:
      - ./ssl/certs/:/etc/nginx/ssl/
      - ./ssl/www/:/var/www/letsencrypt/
    depends_on:
      - backend
    networks:
      - whaticket

  mysql:
    image: ${MYSQL_ENGINE}:${MYSQL_VERSION}
    container_name: mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
    volumes:
      - ./.docker/data/:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    ports:
      - "${MYSQL_PORT}:3306"
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s
    networks:
      - whaticket
